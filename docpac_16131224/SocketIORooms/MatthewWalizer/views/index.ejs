<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatrooms</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="mainPage">
        <div id="contentBox">
            <div id="conversationBox">

            </div>
            <div id="chatBox">

            </div>
            <div id="messageContainer">
                <input type="text" id="messageBox" placeholder="Type your message here">
                <button id="messageButton" onclick="">Send</button>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        var selectedRoom = 'general';

        messageButton.addEventListener('click', () => {
            const message = messageBox.value;
            if (message === '') {
                alert('Please enter a message');
                return;
            } else if (message.length > 512) {
                alert('Please type a shorter message (max 512 characters)');
                return;
            }
            let currentTime = new Date().toLocaleTimeString();
            socket.emit('message', {currentTime: currentTime, receivingRoom: selectedRoom, content: message});
            messageBox.value = '';
        });

        socket.on('message', message => {
            console.log(message);
            const messageElement = document.createElement('div');
            if (message.sender) {
                messageElement.innerText = ' At ' + message.date + ' in the ' + message.roomName + ' room, ' + message.sender + ' said: ' + message.content;
                messageElement.classList.add('normalReceivedMessages');
            } else {
                messageElement.innerText = message.content;
                messageElement.classList.add('serverReceivedMessages');
            }
            chatBox.appendChild(messageElement);
        });

        socket.on('roomsList', (rooms) => {
            while (conversationBox.firstChild) {
                conversationBox.removeChild(conversationBox.firstChild);
            }
            console.log(rooms);
            
            for (room of rooms.roomsList) {
                const roomElement = document.createElement('button');
                roomElement.innerText = room;
                if (room === selectedRoom) {
                    roomElement.classList.add('selectedRoomButton');
                } else {
                    roomElement.classList.add('roomButton');
                }
                roomElement.onclick = () => {
                    selectedRoom = roomElement.innerText;  
                    socket.emit('message', {selectedRoom: selectedRoom});           
                };

                conversationBox.appendChild(roomElement);
            }
        });
    </script>
</body>
</html>