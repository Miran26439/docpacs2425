<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Room</title>
  <script>
    var localName = "<%= user %>";
  </script>
  <style>
    #roomButtons {
      width: 10%;
      height: 150px;
      overflow-y: auto;
      float: left;
      border-style: solid;
    }

    #messages {
      width: 70%;
      height: 300px;
      border-style: solid;
      overflow-y: auto;
    }

    #roomName {
      position: flex;
      top: 10px;
      left: 10px;

    }
  </style>

</head>

<body>
  <div id="roomName">
    Current Room: General
  </div>
  <div id="roomButtons"></div>
  <div id="userList"></div>

  <div id="messages"></div>

  <form id="input-form">
    <label for="message">Enter Message:</label>
    <input type="text" id="message" name="message"><br><br>
    <input type="submit" value="Send">
  </form>

  <script src="/socket.io/socket.io.js">
  </script>

  <script>
    const socket = io();
    var arg;
    var slashCommand;
    var dateTime;
    let currentRoom = "general";

    socket.on("connect", () => {
      console.log('Connected to server');
    });

    socket.on("disconnect", () => {
      console.log('Disconnected from server');
    });

    socket.on("roomsList", (data) => {

    });

    socket.on('roomListUpdate', (data) => {
    const roomButtons = document.getElementById('roomButtons');
    roomButtons.innerHTML = ''; 

    data.rooms.forEach((room) => {
        const button = document.createElement('button');
        button.textContent = `Join ${room}`;
        button.onclick = () => {
            currentRoom = room;
            socket.emit('joinRoom', {
                user: localName,
                arg: room,
                room: currentRoom
            });
            document.getElementById("roomName").textContent = `Room: ${room}`;
            const message = document.createElement("p");
            message.textContent = `You joined room ${room}`;
            document.getElementById("messages").appendChild(message);
        };
        roomButtons.appendChild(button);
    });
});

    socket.on("userList", (users) => {
    const userList = document.getElementById("userList");
    userList.innerHTML = "";

    users.forEach((user) => {
        const userElement = document.createElement("p");
        userElement.textContent = user;
        document.getElementById('messages').appendChild(userElement);
    });
});

    socket.on("message", (user, message, room) => {
      const messagething = document.createElement("p");
      messagething.innerHTML = ` ${new Date()} ${user} ${message}`;
      document.getElementById("messages").appendChild(messagething);
    });

    document.getElementById("input-form").addEventListener("submit", (event) => {
      event.preventDefault();
      const message = document.getElementById("message").value;
      var slashCommand;
      var arg;
      var dateTime;

      if (message.length > 0) {
        let messageText = document.getElementById("message").value;
        const messageArray = messageText.split(" ");
        let slashCommand = messageArray[0];
        let arg = messageArray[1];
        if (arg == undefined) {
          arg = "";
        }

        console.log(slashCommand);
        console.log(arg);

        if (slashCommand == "/leave") {
          socket.emit("leave", {
            user: localName,
            arg: arg
          });
          document.getElementById("roomName").textContent = `Room: ${arg}`;
          const message = document.createElement("p");
          message.textContent = `You left room ${arg}!`;
          document.getElementById("messages").appendChild(message);
          console.log("user left room");
        } else if (slashCommand == "/join") {
          currentRoom = arg;
          socket.emit("joinRoom", {
            user: localName,
            arg: arg,
            room: currentRoom
          });

          document.getElementById("roomName").textContent = `Room: ${arg}`;
          const message = document.createElement("p");
          message.textContent = `You joined room ${arg}`;
          document.getElementById("messages").appendChild(message);
          console.log("user joined room");

        } else if (slashCommand == "/users") {
          socket.emit("userList", {
            user: localName,
            room: currentRoom
          });
        }

        else {
          socket.emit("message", {
            room: currentRoom,
            user: localName,
            message: message,
            dateTime: window.dateTime
          });
          document.getElementById("message").value = "";
          console.log("Message sent");
        }
      }
    });
  </script>
</body>

</html>