<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div id="scoreBox"></div>
    <div id="timerBox">20</div>
    <div id="directionBox"></div>

</body>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io()
        var name = prompt("What is your name?")

        socket.on('startgame', gameInit)

        function gameInit() {
            var score = 0
            var timer = 20
            var direction = 0
    
            var scoreBox = document.getElementById('scoreBox')
            var timerBox = document.getElementById('timerBox')
            var directionBox = document.getElementById('directionBox')
    
    
            function directionSwitch() {
                direction = Math.floor(Math.random() * 4)
                switch (direction) {
                    case 0:
                        directionBox.innerHTML = 'up';
                        break;
                    case 1:
                        directionBox.innerHTML = 'right';
                        break;
                    case 2:
                        directionBox.innerHTML = 'down';
                        break;
                    case 3:
                        directionBox.innerHTML = 'left'
                }
            }
    
            var inter = setInterval(() => {
                // console.log(timer)
                if (timer > 0) {
                    timerBox.innerHTML = timer - 1
                    timer--;
                    // console.log(timer)
                } else {
                    socket.emit('score', score)
                    var xhr = new XMLHttpRequest()
                    xhr.open('POST', '/hiscores')
                    var data = JSON.stringify({
                        name: name,
                        score: score
                    })
                    xhr.send(data)
                    clearInterval(inter)
                }
    
            }, 1000)
    
            
            directionSwitch()
            setInterval(directionSwitch, 2000)
            
            var buttonON = false;
            
            window.addEventListener('gamepadconnected', (event) => {
                const update = () => {
                    
                    for (const gamepad of navigator.getGamepads()) {
                        if (!gamepad) continue;
                        if (gamepad.buttons[0].pressed != buttonON) {
                            buttonON = gamepad.buttons[0].pressed
                            if (buttonON) {
                                if (timer > 0) {
                                    if (directionBox.innerHTML == 'up') {
                                        if (gamepad.axes[1] == -1) {
                                            score++;
                                            scoreBox.innerHTML = score
                                        }
                                    } else if (directionBox.innerHTML == 'right') {
                                        if (gamepad.axes[0] == 1) {
                                            score++;
                                            scoreBox.innerHTML = score
                                        }
                                    } else if (directionBox.innerHTML == 'down') {
                                        if (gamepad.axes[1] == 1) {
                                            score++;
                                            scoreBox.innerHTML = score
                                        }
                                    } else {
                                        if (gamepad.axes[0] == -1) {
                                            score++;
                                            scoreBox.innerHTML = score
                                        }
                                    }
                                }
                            }
                        }
                        
                        if (gamepad.buttons[9].pressed) {
                            setTimeout(() => {
                                location.reload()
                            }, 250)
                        }
                        
                    }
                    requestAnimationFrame(update);
                };
                update();
            });
        }

        socket.on('winner', () => {
            alert('You Win!')
        })

        socket.on('loser', () => {
            alert('You Lose.')
        })
        
        </script>
</html>