<!DOCTYPE html>

<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Click faster than other person game</title>

    <script>
        const username = "<%= name %>"
    </script>

    <style>
        #startGame {
            width: 90px;
            height: 60px;
            border: black;
            margin: 150px auto;
            background-color: rgb(162, 0, 255);
            border-style: groove;


        }

        #startGameDiv {
            width: 100px;
            margin: auto;
        }




        #button1Div {
            border-style: solid;
            border-color: rgb(61, 43, 226);
            width: 300px;
            height: 300px;


        }


        #button {
            border-style: solid;
            border-color: rgb(61, 43, 226);
            width: 300px;
            height: 300px;




        }

        #scoreAndTime {
            width: 100px;
            margin: auto;
        }


        #TestsDiv {
            align-items: center;
            justify-content: center;
            display: flex;
        }
    </style>
</head>


<body>


    <div id='TestsDiv' style="display:none" class="bigDiv">
        <div id='buttonDiv'>
            <button onclick="scoreDoer()" id="button">Click This!</button>
        </div>
    </div>


    <div id=scoreAndTime>
        <p id="scoreBox" style="text-align: left;">Score 0</p>
        <p id="timerBox" style="text-align: left;">20</p>
    </div>




    <div id='startGameDiv'>
        <button onclick="TestsFunction()" id="startGame"> Click here to start game </button>
    </div>


</body>

<script>
    const webSocket = new WebSocket('ws://172.16.3.187:443/');

    const scoreBox = document.getElementById('scoreBox')
    var score = 0
    const timer = document.getElementById('timerBox');
    let timeLeft = 20;
    let timerID;
    

    webSocket.addEventListener("open", () => {
        console.log("We are connected");
        webSocket.send(JSON.stringify({
            type: 'playerUsername',
            username: username
        }));
    });

    webSocket.addEventListener("message", (event) => {
        const message = JSON.parse(event.data);

        if (message.type == 'startCountdown') {
            startCountdown(message.timeLeft);
        }


        else if (message.type == 'gameOver') {
           alert(message.result)
            resetGame();
        }
    });
    
    function TestsFunction() {
            webSocket.send(JSON.stringify({ type: 'startGame' }));
        }

    function countDown() {
        if (timeLeft <= 0) {
            clearInterval(timerID);
            webSocket.send(JSON.stringify({ type: 'endGame' }));
        } else {
            timeLeft--;
            timerBox.innerHTML = 'Time Remaining '+timeLeft;
        }
    }


    function scoreDoer() {
        if (timeLeft > 0) {
            score++;
            scoreBox.innerHTML = score;
            webSocket.send(JSON.stringify({
                type: 'scoreUpdate',
                username: username,
                score: score,
            }));
        }
    }

    function startCountdown(startTime) {
            document.getElementById("TestsDiv").style.display = "flex";
            document.getElementById("startGameDiv").style.display = "none";
            timeLeft = startTime;
            timerBox.innerHTML = timeLeft;
            timerID = setInterval(countDown, 1000);
        }

    function resetGame() {
        location.reload();
    }
</script>

</html>